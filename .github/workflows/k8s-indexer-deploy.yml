name: Deploy Indexer to k8s

on:
  push:
    branches:
      - main
      - vt-add-indexer
      - release
    paths:
      - indexer/**
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'stg'
        type: choice
        options:
          - stg
          - prod
  
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  COMMIT_SHA: ${{ github.sha }}

jobs:
  set-env:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.export-env.outputs.environment }}
    steps:
      - id: export-env
        run: |
          if [[ "${GITHUB_EVENT_NAME}" == "workflow_dispatch" ]]; then
            echo "environment=${{ github.event.inputs.environment }}" >> "${GITHUB_OUTPUT}"
          elif [[ "${GITHUB_REF}" == "refs/heads/main" || "${GITHUB_REF}" == "refs/heads/vt-add-indexer" ]]; then
            echo "environment=stg" >> "${GITHUB_OUTPUT}"
          elif [[ "${GITHUB_REF}" == "refs/heads/release" ]]; then
            echo "environment=prod" >> "${GITHUB_OUTPUT}"
          fi

  build-image:
    needs: set-env
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      DEPLOY_ENV: ${{ needs.set-env.outputs.environment }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: indexer
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-indexer-starship:${{ env.DEPLOY_ENV }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-indexer-starship:${{ env.DEPLOY_ENV }}-${{ env.COMMIT_SHA }}

  deploy-to-k8s:
    needs: 
      - build-image
      - set-env
    runs-on: ubuntu-latest
    env:
      DEPLOY_ENV: ${{ needs.set-env.outputs.environment }}

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to Kubernetes
        uses: sergeyfilyanin/kubectl-aws-eks@master
        with:
          args: rollout restart deployment vara-amm-indexer-${{ env.DEPLOY_ENV }} vara-amm-graphql-${{ env.DEPLOY_ENV }} -n vara

      - name: Check rollout status
        uses: sergeyfilyanin/kubectl-aws-eks@master
        with:
          args: get deployment -o name -n vara | xargs -n1 -t kubectl rollout status -n vara --timeout=120s
